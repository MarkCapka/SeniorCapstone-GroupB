Index: SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.skyboxjavafxtester;\r\n\r\nimport com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator;\r\nimport com.luckycatlabs.sunrisesunset.dto.Location;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Group;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.DatePicker;\r\nimport javafx.scene.control.Slider;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.stage.Stage;\r\n\r\nimport javax.swing.JOptionPane;\r\n\r\nimport java.io.IOException;\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalTime;\r\nimport java.time.temporal.ChronoUnit;\r\n\r\n\r\npublic class SkyBoxController {\r\n\r\n    @FXML\r\n    private static Pane skyboxPane;\r\n    @FXML\r\n    private Pane entireFrame;\r\n    @FXML\r\n    private AnchorPane uiPane;\r\n    @FXML\r\n    private AnchorPane sliderAndDate;\r\n    @FXML\r\n    private DatePicker datePicker;\r\n    @FXML\r\n    private Slider slider;\r\n    @FXML\r\n    private Label locationLabel;\r\n    @FXML\r\n    private Label currentTimeLabel;\r\n    @FXML\r\n    private TextField theLocationPicker;\r\n    @FXML\r\n    private Button returnOnInvestment;\r\n    @FXML\r\n    private Button optimalPanels;\r\n    @FXML\r\n    private Button quit;\r\n    @FXML\r\n    private Button removeAll;\r\n    @FXML\r\n    private Button intensityLevels;\r\n    @FXML\r\n    private Button sunriseSunsetTimes;\r\n    @FXML\r\n    private Button controls;\r\n    @FXML\r\n    private Button addAll;\r\n\r\n    private static String currentTime;\r\n\r\n\r\n    @FXML\r\n    protected void initialize() throws ParseException, IOException {\r\n        setSkyboxPane();\r\n        setEntireFrame();\r\n\r\n        //Initialize Slider Ticks\r\n        LocalTime start = LocalTime.parse(SkyBoxApplication.sunriseTime);\r\n        LocalTime end =  LocalTime.parse(SkyBoxApplication.sunsetTime);\r\n        Long hours = ChronoUnit.HOURS.between(start, end);//# of mins between\r\n        slider.setMax(hours); //Gives 11 ticks.... 11 hours between sunrise and sunset\r\n\r\n        //Initialize currentTime\r\n        changeHour(6);\r\n        currentTimeLabel.setText(currentTime);\r\n\r\n    }\r\n\r\n    @FXML\r\n    private void setEntireFrame() {\r\n        entireFrame.getChildren().addAll(new Pane(skyboxPane), new AnchorPane(uiPane), new AnchorPane(sliderAndDate));\r\n    }\r\n\r\n\r\n    @FXML\r\n    protected Pane setSkyboxPane() throws ParseException {\r\n        Group skybox = new Group();\r\n        Group sun = SkyBoxApplication.sunCreation(); //creating sun\r\n        skyboxPane = new Pane(sun, skybox);\r\n        SkyBoxApplication.startParams(); // Setting start date, location, sunset/sunrise times\r\n        Group panelsWHouse = SkyBoxApplication.models(); //Creating all models for the scene\r\n\r\n        skybox.getChildren().addAll(sun, panelsWHouse);\r\n        SkyBoxApplication.constructWorld(skybox); // Construct the empty SkyBox group\r\n\r\n        //THIS causes an error: Duplicate children added so i commented it out. Its being out in skyboxPane above\r\n        //skyboxPane.getChildren().add(skybox);\r\n\r\n\r\n        //Heres where we do the set up camera and background?\r\n        //Could we move it into constructWorld?\r\n        //How to convert the things happening from a Scene to A AnchorPane or how to add a new scene into the Pane?\r\n\r\n        /*\r\n        skybox.setFill(new ImagePattern(SkyBoxApplication.skyboxImage));\r\n        camera = new PerspectiveCamera(true);\r\n        camera.setNearClip(0.1);\r\n        camera.setFarClip(30000.0);\r\n\r\n         */\r\n\r\n\r\n        return skyboxPane;\r\n    }\r\n\r\n\r\n\r\n\r\n    //Methods for buttons\r\n    public void getDate(ActionEvent actionEvent) throws ParseException {\r\n        String newDate = datePicker.getValue().toString();\r\n        DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\"); //Formatter\r\n        SkyBoxApplication.date = formatter.parse(newDate);\r\n\r\n        recalculateSunTimes();\r\n    }\r\n\r\n    public void getLocation(ActionEvent actionEvent) {\r\n        SkyBoxApplication.theLocation = theLocationPicker.getText();\r\n        String[] coords = SkyBoxApplication.theLocation.split(\",\");\r\n        SkyBoxApplication.latitude = Double.parseDouble(coords[0]);\r\n        SkyBoxApplication.longitude = Double.parseDouble(coords[1]);\r\n        System.out.println(SkyBoxApplication.latitude);\r\n        System.out.println(SkyBoxApplication.longitude);\r\n\r\n        recalculateSunTimes();\r\n    }\r\n\r\n    public void showROI(ActionEvent actionEvent) {\r\n    }\r\n\r\n    public void removeAllPanels(ActionEvent actionEvent) {\r\n\r\n        if(SkyBoxApplication.panelsWHouse.getChildren().contains(SkyBoxApplication.solarPanelThreewR)) {\r\n            SkyBoxApplication.panelsWHouse.getChildren().remove(6);\r\n            SkyBoxApplication.panelsWHouse.getChildren().remove(5);\r\n            SkyBoxApplication.panelsWHouse.getChildren().remove(4);\r\n            SkyBoxApplication.panelsWHouse.getChildren().remove(3);\r\n            SkyBoxApplication.panelsWHouse.getChildren().remove(2);\r\n            SkyBoxApplication.panelsWHouse.getChildren().remove(1);\r\n        }\r\n    }\r\n\r\n    public void showIntensityLevels(ActionEvent actionEvent) {\r\n    }\r\n\r\n    public void showSunTimes(ActionEvent actionEvent) {\r\n\r\n        String sunTimes =\r\n                \"On \" + SkyBoxApplication.date.toString() + \"\\n\"\r\n                        + \"at latitude: \" + SkyBoxApplication.latitude + \", and longitude: \" + SkyBoxApplication.longitude + \":\\n\"\r\n                        + \"\\n\"\r\n                        + \"Sunrise: \" + SkyBoxApplication.sunriseTime + \"\\n\"\r\n                        + \"Sunset: \" + SkyBoxApplication.sunsetTime;\r\n\r\n        JOptionPane.showMessageDialog(null, sunTimes, \"Sunrise/Sunset Times\", JOptionPane.PLAIN_MESSAGE);\r\n    }\r\n\r\n    public void showControls(ActionEvent actionEvent) {\r\n        String controls =\r\n                \"Controls:\\n\"\r\n                        + \"\\n\"\r\n                        + \"Rotate Camera: click and drag\\n\"\r\n                        + \"Move Camera Up: w\\n\"\r\n                        + \"Move Camera Left: a\\n\"\r\n                        + \"Move Camera Down: s\\n\"\r\n                        + \"Move Camera Right: d\\n\"\r\n                        + \"Zoom In: ,\\n\"\r\n                        + \"Zoom out: .\\n\"\r\n                        + \"Rotate Model Right: m\\n\"\r\n                        + \"Rotate Model Left: n\\n\"\r\n                        + \"\\n\"\r\n                        + \"Select Solar Panel 1: 1\\n\"\r\n                        + \"Select Solar Panel 2: 2\\n\"\r\n                        + \"Clear Selection: 0\\n\"\r\n                        + \"\\n\"\r\n                        + \"If Panel Is Selected:\\n\"\r\n                        + \"Move Backward: Up Arrow\\n\"\r\n                        + \"Move Forawrd: Down Arrow\\n\"\r\n                        + \"Move Left: Right Arrow\\n\"\r\n                        + \"Move Right: Left Arrow\\n\"\r\n                        + \"Rotate 45 degrees: Spacebar\";\r\n\r\n        JOptionPane.showMessageDialog(null, controls, \"Controls\", JOptionPane.PLAIN_MESSAGE);\r\n    }\r\n\r\n    public void addAllPanels(ActionEvent actionEvent) {\r\n\r\n        if(SkyBoxApplication.panelsWHouse.getChildren().size() < 2) {\r\n            SkyBoxApplication.panelsWHouse.getChildren().add(SkyBoxApplication.solarPanelOnewR);\r\n            SkyBoxApplication.panelsWHouse.getChildren().add(SkyBoxApplication.solarPanelTwowR);\r\n            SkyBoxApplication.panelsWHouse.getChildren().add(SkyBoxApplication.solarPanelThreewR);\r\n            SkyBoxApplication.panelsWHouse.getChildren().add(SkyBoxApplication.solarPanelFourwR);\r\n            SkyBoxApplication.panelsWHouse.getChildren().add(SkyBoxApplication.gPanelOneBox);\r\n            SkyBoxApplication.panelsWHouse.getChildren().add(SkyBoxApplication.gPanelTwoBox);\r\n        }\r\n    }\r\n\r\n    public void exitProgram(ActionEvent aE) {\r\n        Stage stage = (Stage) uiPane.getScene().getWindow();\r\n        stage.close();\r\n    }\r\n\r\n    public void highlightOptimalPanels(ActionEvent actionEvent) {\r\n    }\r\n\r\n    public void getTimeZone(ActionEvent actionEvent) {\r\n        SkyBoxApplication.timeZone = actionEvent.getTarget().toString();\r\n        recalculateSunTimes();\r\n    }\r\n\r\n    //Helper Methods\r\n\r\n    private void recalculateSunTimes() {\r\n\r\n        SkyBoxApplication.cal.setTime(SkyBoxApplication.date); //Calender object given corresponding date\r\n\r\n        SkyBoxApplication.location = new Location(SkyBoxApplication.latitude, SkyBoxApplication.longitude); // Will be entered in coordinates\r\n        SunriseSunsetCalculator calculator = new SunriseSunsetCalculator(SkyBoxApplication.location, SkyBoxApplication.timeZone); // Creates calculator for sun times\r\n\r\n        SkyBoxApplication.sunriseTime = calculator.getOfficialSunriseForDate(SkyBoxApplication.cal); // Gets sunrise based on date and calculator created\r\n        SkyBoxApplication.sunsetTime = calculator.getOfficialSunsetForDate(SkyBoxApplication.cal); // Gets sunset based on date and calculator created\r\n\r\n        LocalTime start = LocalTime.parse(SkyBoxApplication.sunriseTime);\r\n        LocalTime end =  LocalTime.parse(SkyBoxApplication.sunsetTime);\r\n        Long hours = ChronoUnit.HOURS.between(start, end);\r\n        slider.setMax(hours);\r\n    }\r\n\r\n    public void sunMovement() {\r\n        float sliderValue = (float) slider.getValue();\r\n        if(sliderValue == .5)\r\n        {\r\n            changeMinute(SkyBoxApplication.sunriseTime, 30);\r\n            //call method to move sun here\r\n        }\r\n        else if(sliderValue >= 0 && sliderValue < 1)\r\n        {\r\n            //No time changes for hour 0\r\n            changeHour(0);\r\n\r\n            //Sun Stuff:\r\n            //Starting point for sun\r\n        }\r\n        else if(sliderValue == 1.5)\r\n        {\r\n            //change time\r\n            changeMinute(currentTime,30);\r\n\r\n            //change sun\r\n            //sun.translateXY blah blah blah\r\n        }\r\n        else if(sliderValue >= 1 && sliderValue < 2)\r\n        {\r\n            changeHour(1);\r\n        }\r\n        else if(sliderValue == 2.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 2 && sliderValue < 3)\r\n        {\r\n            changeHour(2);\r\n        }\r\n        else if(sliderValue == 3.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 3 && sliderValue < 4)\r\n        {\r\n            changeHour(3);\r\n        }\r\n        else if(sliderValue == 4.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 4 && sliderValue < 5)\r\n        {\r\n            changeHour(4);\r\n        }\r\n        else if(sliderValue == 5.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 5 && sliderValue < 6)\r\n        {\r\n            changeHour(5);\r\n        }\r\n        else if(sliderValue == 6.5)\r\n        {\r\n            changeMinute(currentTime, 30);\r\n        }\r\n        else if(sliderValue >= 6 && sliderValue < 7)\r\n        {\r\n            changeHour(6);\r\n        }\r\n        else if(sliderValue == 7.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 7 && sliderValue < 8)\r\n        {\r\n            changeHour(7);\r\n        }\r\n        else if(sliderValue == 8.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 8 && sliderValue < 9)\r\n        {\r\n            changeHour(8);\r\n        }\r\n        else if(sliderValue == 9.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 9 && sliderValue < 10)\r\n        {\r\n            changeHour(9);\r\n        }\r\n        else if(sliderValue == 10.5)\r\n        {\r\n            changeMinute(currentTime,30);\r\n        }\r\n        else if(sliderValue >= 10 && sliderValue < 11)\r\n        {\r\n            changeHour(10);\r\n\r\n        }\r\n        else if(sliderValue == 11)\r\n        {\r\n            changeHour(11);\r\n        }\r\n        System.out.println(sliderValue + \" \");\r\n\r\n    }\r\n\r\n    public void changeHour(int n){\r\n        String startTime = SkyBoxApplication.sunriseTime;\r\n        String[] wholeTime = startTime.split(\":\");\r\n        int hour = Integer.parseInt(wholeTime[0]);\r\n        int current = hour + n;\r\n        StringBuilder timeMaker = new StringBuilder(current + \":\" + wholeTime[1]);\r\n        currentTime = timeMaker.toString();\r\n        currentTimeLabel.setText(currentTime);\r\n        System.out.println(currentTime);\r\n    }\r\n\r\n    public void changeMinute(String currentTime, int n){\r\n        String[] wholeTime = currentTime.split(\":\");\r\n        int mins = Integer.parseInt(wholeTime[1]);\r\n        int current = mins + n;\r\n        StringBuilder timeMaker = new StringBuilder(wholeTime[0] + \":\" + current);\r\n        currentTime = timeMaker.toString();\r\n        currentTimeLabel.setText(currentTime);\r\n        System.out.println(currentTime);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java b/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java
--- a/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java	(revision 12d37e330515c6c4f5fc5ef7d22b57cfefa6dbb8)
+++ b/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java	(date 1647085488715)
@@ -12,17 +12,21 @@
 import javafx.scene.control.Label;
 import javafx.scene.layout.AnchorPane;
 import javafx.scene.layout.Pane;
+import javafx.scene.shape.Box;
 import javafx.stage.Stage;
 
 import javax.swing.JOptionPane;
 
 import java.io.IOException;
 import java.text.DateFormat;
+import java.text.DecimalFormat;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.time.LocalTime;
 import java.time.temporal.ChronoUnit;
 
+import static com.example.skyboxjavafxtester.SkyBoxApplication.clear;
+
 
 public class SkyBoxController {
 
@@ -45,7 +49,7 @@
     @FXML
     private TextField theLocationPicker;
     @FXML
-    private Button returnOnInvestment;
+    private Button paybackPeriod;
     @FXML
     private Button optimalPanels;
     @FXML
@@ -62,6 +66,7 @@
     private Button addAll;
 
     private static String currentTime;
+    private static Boolean pressed = false;
 
 
     @FXML
@@ -141,7 +146,19 @@
         recalculateSunTimes();
     }
 
-    public void showROI(ActionEvent actionEvent) {
+    public void showPP(ActionEvent actionEvent) {
+        DecimalFormat dc = new DecimalFormat("0.00");
+        int panelCost = 550; //Price of each solar panel
+        int groundPanelCost = 1100; //Price of each Ground solar panel
+        int maintenance = 200; //Cost of maintenance, should me serviced 2x a year
+        int installCost = 4000; //Labor cost
+        int costPerMonth = 100; //Cost per month to spend
+        double averageMonthlyElectricBill = 115.49; // Price of average US Electric bill
+
+        double pp = ((panelCost * 4) + (groundPanelCost * 2) + installCost + (costPerMonth * 12) + (maintenance * 2)) / (averageMonthlyElectricBill * 12);
+
+        String result = "The Payback Period is: " + dc.format(pp) + " Years";
+        JOptionPane.showMessageDialog(null, result, "Payback Period", JOptionPane.PLAIN_MESSAGE);
     }
 
     public void removeAllPanels(ActionEvent actionEvent) {
@@ -217,6 +234,24 @@
     }
 
     public void highlightOptimalPanels(ActionEvent actionEvent) {
+        if(pressed == false)
+        {
+            SkyBoxApplication.colorSetOpt(SkyBoxApplication.sun); //Need to figure out a way to toggle on/off. Just toggles on
+            SkyBoxApplication.gColorSetOpt(SkyBoxApplication.sun);
+            pressed = true;
+        }
+        else if(pressed = true) {
+            ((Box) SkyBoxApplication.solarPanelOnewR.getChildren().get(1)).setMaterial(clear);
+            ((Box) SkyBoxApplication.solarPanelTwowR.getChildren().get(1)).setMaterial(clear);
+            ((Box) SkyBoxApplication.solarPanelThreewR.getChildren().get(1)).setMaterial(clear);
+            ((Box) SkyBoxApplication.solarPanelFourwR.getChildren().get(1)).setMaterial(clear);
+            ((Box) SkyBoxApplication.gPanelOneBox.getChildren().get(1)).setMaterial(clear);
+            ((Box) SkyBoxApplication.gPanelTwoBox.getChildren().get(1)).setMaterial(clear);
+
+            pressed = false;
+        }
+
+
     }
 
     public void getTimeZone(ActionEvent actionEvent) {
@@ -255,7 +290,7 @@
             changeHour(0);
 
             //Sun Stuff:
-            //Starting point for sun
+            //SkyBoxApplication.sunTrajectory();
         }
         else if(sliderValue == 1.5)
         {
Index: SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.DatePicker?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.Slider?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.effect.ImageInput?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<Pane fx:id=\"entireFrame\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" prefHeight=\"768.0\" prefWidth=\"1024.0\" style=\"-fx-border-color: black;\" xmlns=\"http://javafx.com/javafx/17\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.skyboxjavafxtester.SkyBoxController\">\r\n   <children>\r\n      <AnchorPane fx:id=\"sliderAndDate\" layoutY=\"39.0\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"51.0\" prefWidth=\"1024.0\" style=\"-fx-background-color: linear-gradient(to right, indigo 20%, red 70%, indigo 100%); -fx-border-color: black;\">\r\n         <children>\r\n            <DatePicker fx:id=\"datePicker\" layoutX=\"14.0\" layoutY=\"13.0\" onAction=\"#getDate\" prefHeight=\"25.0\" prefWidth=\"166.0\" promptText=\"03/10/2022\" />\r\n            <Slider fx:id=\"slider\" layoutX=\"193.0\" layoutY=\"7.0\" onMouseReleased=\"#sunMovement\" majorTickUnit=\"1.0\" max=\"12.0\" minorTickCount=\"1\" prefHeight=\"38.0\" prefWidth=\"811.0\" showTickMarks=\"true\" snapToTicks=\"true\" value=\"6.0\"  />\r\n         </children>\r\n      </AnchorPane>\r\n      <AnchorPane fx:id=\"uiPane\" layoutY=\"89.0\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"678.0\" prefWidth=\"177.0\" style=\"-fx-border-color: black;\">\r\n         <children>\r\n            <Label fx:id=\"locationLabel\" alignment=\"CENTER\" layoutX=\"13.0\" layoutY=\"98.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Location:\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"theLocationPicker\" alignment=\"CENTER\" layoutX=\"13.0\" layoutY=\"123.0\" onAction=\"#getLocation\" promptText=\"47.6588, -117.4260\" />\r\n            <Label fx:id=\"solarLabel\" alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"232.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Solar Panels:\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font></Label>\r\n            <Button fx:id=\"returnOnInvestment\" layoutX=\"9.0\" layoutY=\"557.0\" mnemonicParsing=\"false\" onAction=\"#showROI\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Calculate Return On Investment\">\r\n               <font>\r\n                  <Font size=\"10.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"optimalPanels\" layoutX=\"9.0\" layoutY=\"456.0\" mnemonicParsing=\"false\" onAction=\"#highlightOptimalPanels\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Optimal Solar Panels\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"removeAll\" layoutX=\"94.0\" layoutY=\"265.0\" mnemonicParsing=\"false\" onAction=\"#removeAllPanels\" prefHeight=\"51.0\" prefWidth=\"75.0\" style=\"-fx-background-color: red;\" text=\"Remove All\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"11.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"intensityLevels\" layoutX=\"9.0\" layoutY=\"506.0\" mnemonicParsing=\"false\" onAction=\"#showIntensityLevels\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Light Intensity Levels\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"sunriseSunsetTimes\" layoutX=\"9.0\" layoutY=\"404.0\" mnemonicParsing=\"false\" onAction=\"#showSunTimes\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Sunrise/Sunset Times\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"controls\" layoutX=\"9.0\" layoutY=\"354.0\" mnemonicParsing=\"false\" onAction=\"#showControls\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Program Controls\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"addAll\" layoutX=\"9.0\" layoutY=\"265.0\" mnemonicParsing=\"false\" onAction=\"#addAllPanels\" prefHeight=\"51.0\" prefWidth=\"75.0\" style=\"-fx-background-color: green;\" text=\"Add All\" textAlignment=\"CENTER\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"11.0\" />\r\n               </font>\r\n            </Button>\r\n            <Label fx:id=\"timezoneLabel\" alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"163.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Timezone\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"timezone\" alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"188.0\" onAction=\"#getTimeZone\" promptText=\"GMT-8\" />\r\n            <Button fx:id=\"quit\" layoutX=\"8.0\" layoutY=\"613.0\" mnemonicParsing=\"false\" onAction=\"#exitProgram\" prefHeight=\"38.0\" prefWidth=\"159.0\" style=\"-fx-background-color: red;\" text=\"QUIT\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"14.0\" />\r\n               </font>\r\n            </Button>\r\n            <Label alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"14.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Current Time:\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label fx:id=\"currentTimeLabel\" alignment=\"CENTER\" layoutX=\"13.0\" layoutY=\"41.0\" prefHeight=\"17.0\" prefWidth=\"149.0\">\r\n               <font>\r\n                  <Font name=\"Georgia\" size=\"18.0\" />\r\n               </font>\r\n            </Label>\r\n         </children>\r\n      </AnchorPane>\r\n      <Pane fx:id=\"skyboxPane\" accessibleRole=\"IMAGE_VIEW\" blendMode=\"SRC_ATOP\" focusTraversable=\"true\" layoutX=\"177.0\" layoutY=\"89.0\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"678.0\" prefWidth=\"847.0\">\r\n         <effect>\r\n            <ImageInput>\r\n               <source>\r\n                  <Image url = \"skyboxDesert.png\" />\r\n               </source>\r\n            </ImageInput>\r\n         </effect>\r\n      </Pane>\r\n      <Label fx:id=\"title\" alignment=\"CENTER\" contentDisplay=\"CENTER\" layoutX=\"353.0\" layoutY=\"8.0\" prefHeight=\"17.0\" prefWidth=\"335.0\" text=\"Solar Optimization Simulator\">\r\n         <font>\r\n            <Font name=\"Georgia\" size=\"22.0\" />\r\n         </font>\r\n      </Label>\r\n   </children>\r\n</Pane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml b/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml
--- a/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml	(revision 12d37e330515c6c4f5fc5ef7d22b57cfefa6dbb8)
+++ b/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml	(date 1647082747482)
@@ -31,7 +31,7 @@
                <font>
                   <Font name="Georgia Italic" size="15.0" />
                </font></Label>
-            <Button fx:id="returnOnInvestment" layoutX="9.0" layoutY="557.0" mnemonicParsing="false" onAction="#showROI" prefHeight="38.0" prefWidth="159.0" text="Calculate Return On Investment">
+            <Button fx:id="paybackPeriod" layoutX="9.0" layoutY="557.0" mnemonicParsing="false" onAction="#showPP" prefHeight="38.0" prefWidth="159.0" text="Calculate Payback Period">
                <font>
                   <Font size="10.0" />
                </font>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6cee0f4c-ae2b-4f37-92d9-62094ef5f861\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxController.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skyboxDesert.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/module-info.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/module-info.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxApplication.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxApplication.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxController.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxController.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/module-info.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/module-info.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"SeanZ-SunriseAndSunsetTimes\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/module-info.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/SkyBoxJavaFX-Tester/pom.xml\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"25Cu3oqloPjbZ4OsgWQGP9tBJBe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"GitStage.ChangesTree.GroupingKeys\" value=\"directory&#10;module&#10;repository\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../SolarOptimization/src/main/resources/com/example/solaroptimization/skybox-viewUI.fxml\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settings.project.maven.importing\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.example.skyboxjavafxtester\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\seanz\\workspace\\SeniorCapstone-GroupB\\SkyBoxJavaFX-Tester\\src\\main\\resources\\com\\example\\skyboxjavafxtester\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SkyboxApplication\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.skyboxjavafxtester.SkyBoxApplication\" />\r\n      <module name=\"SkyBoxJavaFX-Tester\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"UI file started/uploaded. House rotation with everything on/around the house.\">\r\n      <created>1644824743654</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644824743654</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"UI file started/uploaded. House rotation with everything on/around the house.\">\r\n      <created>1644899137691</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644899137691</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"House rotate controls. New GroundSolarPanel.3DS file\">\r\n      <created>1644904645932</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644904645932</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Code Cleaned and integrated with Anthony patch2\">\r\n      <created>1644963039219</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1644963039219</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6cee0f4c-ae2b-4f37-92d9-62094ef5f861\" name=\"Changes\" comment=\"\" />\r\n      <created>1645043203204</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1645043203204</updated>\r\n      <workItem from=\"1645043206220\" duration=\"3517000\" />\r\n      <workItem from=\"1645047426714\" duration=\"1272000\" />\r\n      <workItem from=\"1645049055802\" duration=\"219000\" />\r\n      <workItem from=\"1645049338668\" duration=\"113000\" />\r\n      <workItem from=\"1645057272177\" duration=\"4358000\" />\r\n      <workItem from=\"1645156921694\" duration=\"17781000\" />\r\n      <workItem from=\"1645561605767\" duration=\"1078000\" />\r\n      <workItem from=\"1645563715808\" duration=\"664000\" />\r\n      <workItem from=\"1645828800517\" duration=\"26573000\" />\r\n      <workItem from=\"1646283573175\" duration=\"869000\" />\r\n      <workItem from=\"1646382819472\" duration=\"22747000\" />\r\n      <workItem from=\"1646970046628\" duration=\"18387000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Accurate sunset and sunrise times from location and date\">\r\n      <created>1645159193328</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645159193328</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Accurate sunset and sunrise times from location and date\">\r\n      <created>1645172071909</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1645172071909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"New Controls and cleaner code\">\r\n      <created>1646213992855</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646213992855</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"New Controls and cleaner code\">\r\n      <created>1646214118286</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646214118286</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Most Up to Date, most of UI working\">\r\n      <created>1646970082759</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646970082759</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\">\r\n      <created>1646975219046</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646975219046</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\">\r\n      <created>1646975232510</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646975232510</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\">\r\n      <created>1646984092859</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646984092859</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\">\r\n      <created>1646984104666</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646984104666</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\">\r\n      <created>1646984486988</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646984486988</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\">\r\n      <created>1646984773424</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1646984773424</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"SeanZ-UIStart\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"UI file started/uploaded. House rotation with everything on/around the house.\" />\r\n    <MESSAGE value=\"House rotate controls. New GroundSolarPanel.3DS file\" />\r\n    <MESSAGE value=\"Code Cleaned and integrated with Anthony patch2\" />\r\n    <MESSAGE value=\"Accurate sunset and sunrise times from location and date\" />\r\n    <MESSAGE value=\"New Controls and cleaner code\" />\r\n    <MESSAGE value=\"Most Up to Date, most of UI working\" />\r\n    <MESSAGE value=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"All UI tools working correctly, Anthonys sun code integrated in but not connected yet\" />\r\n  </component>\r\n  <component name=\"XPathView.XPathProjectComponent\">\r\n    <history />\r\n    <find-history />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/SeniorCapstone_GroupB$SkyboxApplication.ic\" NAME=\"SkyboxApplication Coverage Results\" MODIFIED=\"1642394879393\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>com.capstone.skyboxjavafx.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 12d37e330515c6c4f5fc5ef7d22b57cfefa6dbb8)
+++ b/.idea/workspace.xml	(date 1647230577165)
@@ -5,17 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="6cee0f4c-ae2b-4f37-92d9-62094ef5f861" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skyboxDesert.png" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/module-info.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyboxController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxApplication.class" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxApplication.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxController.class" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/SkyboxController.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/com/example/skyboxjavafxtester/skybox-viewUI.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/module-info.class" beforeDir="false" afterPath="$PROJECT_DIR$/SkyBoxJavaFX-Tester/target/classes/module-info.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -162,7 +155,8 @@
       <workItem from="1645828800517" duration="26573000" />
       <workItem from="1646283573175" duration="869000" />
       <workItem from="1646382819472" duration="22747000" />
-      <workItem from="1646970046628" duration="18387000" />
+      <workItem from="1646970046628" duration="18988000" />
+      <workItem from="1647069487351" duration="3427000" />
     </task>
     <task id="LOCAL-00005" summary="Accurate sunset and sunrise times from location and date">
       <created>1645159193328</created>
@@ -241,7 +235,14 @@
       <option name="project" value="LOCAL" />
       <updated>1646984773424</updated>
     </task>
-    <option name="localTasksCounter" value="16" />
+    <task id="LOCAL-00016" summary="Optimal Solar Panels Button functional and correct">
+      <created>1647035826490</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1647035826490</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -279,7 +280,8 @@
     <MESSAGE value="New Controls and cleaner code" />
     <MESSAGE value="Most Up to Date, most of UI working" />
     <MESSAGE value="All UI tools working correctly, Anthonys sun code integrated in but not connected yet" />
-    <option name="LAST_COMMIT_MESSAGE" value="All UI tools working correctly, Anthonys sun code integrated in but not connected yet" />
+    <MESSAGE value="Optimal Solar Panels Button functional and correct" />
+    <option name="LAST_COMMIT_MESSAGE" value="Optimal Solar Panels Button functional and correct" />
   </component>
   <component name="XPathView.XPathProjectComponent">
     <history />
Index: SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.DatePicker?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.Slider?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.effect.ImageInput?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<Pane fx:id=\"entireFrame\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" prefHeight=\"768.0\" prefWidth=\"1024.0\" style=\"-fx-border-color: black;\" xmlns=\"http://javafx.com/javafx/17\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.skyboxjavafxtester.SkyBoxController\">\r\n   <children>\r\n      <AnchorPane fx:id=\"sliderAndDate\" layoutY=\"39.0\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"51.0\" prefWidth=\"1024.0\" style=\"-fx-background-color: linear-gradient(to right, indigo 20%, red 70%, indigo 100%); -fx-border-color: black;\">\r\n         <children>\r\n            <DatePicker fx:id=\"datePicker\" layoutX=\"14.0\" layoutY=\"13.0\" onAction=\"#getDate\" prefHeight=\"25.0\" prefWidth=\"166.0\" promptText=\"03/10/2022\" />\r\n            <Slider fx:id=\"slider\" layoutX=\"193.0\" layoutY=\"7.0\" onMouseReleased=\"#sunMovement\" majorTickUnit=\"1.0\" max=\"12.0\" minorTickCount=\"1\" prefHeight=\"38.0\" prefWidth=\"811.0\" showTickMarks=\"true\" snapToTicks=\"true\" value=\"6.0\"  />\r\n         </children>\r\n      </AnchorPane>\r\n      <AnchorPane fx:id=\"uiPane\" layoutY=\"89.0\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"678.0\" prefWidth=\"177.0\" style=\"-fx-border-color: black;\">\r\n         <children>\r\n            <Label fx:id=\"locationLabel\" alignment=\"CENTER\" layoutX=\"13.0\" layoutY=\"98.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Location:\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"theLocationPicker\" alignment=\"CENTER\" layoutX=\"13.0\" layoutY=\"123.0\" onAction=\"#getLocation\" promptText=\"47.6588, -117.4260\" />\r\n            <Label fx:id=\"solarLabel\" alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"232.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Solar Panels:\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font></Label>\r\n            <Button fx:id=\"returnOnInvestment\" layoutX=\"9.0\" layoutY=\"557.0\" mnemonicParsing=\"false\" onAction=\"#showROI\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Calculate Return On Investment\">\r\n               <font>\r\n                  <Font size=\"10.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"optimalPanels\" layoutX=\"9.0\" layoutY=\"456.0\" mnemonicParsing=\"false\" onAction=\"#highlightOptimalPanels\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Optimal Solar Panels\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"removeAll\" layoutX=\"94.0\" layoutY=\"265.0\" mnemonicParsing=\"false\" onAction=\"#removeAllPanels\" prefHeight=\"51.0\" prefWidth=\"75.0\" style=\"-fx-background-color: red;\" text=\"Remove All\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"11.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"intensityLevels\" layoutX=\"9.0\" layoutY=\"506.0\" mnemonicParsing=\"false\" onAction=\"#showIntensityLevels\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Light Intensity Levels\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"sunriseSunsetTimes\" layoutX=\"9.0\" layoutY=\"404.0\" mnemonicParsing=\"false\" onAction=\"#showSunTimes\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Sunrise/Sunset Times\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"controls\" layoutX=\"9.0\" layoutY=\"354.0\" mnemonicParsing=\"false\" onAction=\"#showControls\" prefHeight=\"38.0\" prefWidth=\"159.0\" text=\"Program Controls\">\r\n               <font>\r\n                  <Font size=\"13.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"addAll\" layoutX=\"9.0\" layoutY=\"265.0\" mnemonicParsing=\"false\" onAction=\"#addAllPanels\" prefHeight=\"51.0\" prefWidth=\"75.0\" style=\"-fx-background-color: green;\" text=\"Add All\" textAlignment=\"CENTER\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"11.0\" />\r\n               </font>\r\n            </Button>\r\n            <Label fx:id=\"timezoneLabel\" alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"163.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Timezone\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"timezone\" alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"188.0\" onAction=\"#getTimeZone\" promptText=\"GMT-8\" />\r\n            <Button fx:id=\"quit\" layoutX=\"8.0\" layoutY=\"613.0\" mnemonicParsing=\"false\" onAction=\"#exitProgram\" prefHeight=\"38.0\" prefWidth=\"159.0\" style=\"-fx-background-color: red;\" text=\"QUIT\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"14.0\" />\r\n               </font>\r\n            </Button>\r\n            <Label alignment=\"CENTER\" layoutX=\"14.0\" layoutY=\"14.0\" prefHeight=\"17.0\" prefWidth=\"149.0\" text=\"Current Time:\">\r\n               <font>\r\n                  <Font name=\"Georgia Italic\" size=\"15.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label fx:id=\"currentTimeLabel\" alignment=\"CENTER\" layoutX=\"13.0\" layoutY=\"41.0\" prefHeight=\"17.0\" prefWidth=\"149.0\">\r\n               <font>\r\n                  <Font name=\"Georgia\" size=\"18.0\" />\r\n               </font>\r\n            </Label>\r\n         </children>\r\n      </AnchorPane>\r\n      <Pane fx:id=\"skyboxPane\" accessibleRole=\"IMAGE_VIEW\" blendMode=\"SRC_ATOP\" focusTraversable=\"true\" layoutX=\"177.0\" layoutY=\"89.0\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"678.0\" prefWidth=\"847.0\">\r\n         <effect>\r\n            <ImageInput>\r\n               <source>\r\n                  <Image url = \"skyboxDesert.png\" />\r\n               </source>\r\n            </ImageInput>\r\n         </effect>\r\n      </Pane>\r\n      <Label fx:id=\"title\" alignment=\"CENTER\" contentDisplay=\"CENTER\" layoutX=\"353.0\" layoutY=\"8.0\" prefHeight=\"17.0\" prefWidth=\"335.0\" text=\"Solar Optimization Simulator\">\r\n         <font>\r\n            <Font name=\"Georgia\" size=\"22.0\" />\r\n         </font>\r\n      </Label>\r\n   </children>\r\n</Pane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml b/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml
--- a/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml	(revision 12d37e330515c6c4f5fc5ef7d22b57cfefa6dbb8)
+++ b/SkyBoxJavaFX-Tester/src/main/resources/com/example/skyboxjavafxtester/skybox-viewUI.fxml	(date 1647082747482)
@@ -31,7 +31,7 @@
                <font>
                   <Font name="Georgia Italic" size="15.0" />
                </font></Label>
-            <Button fx:id="returnOnInvestment" layoutX="9.0" layoutY="557.0" mnemonicParsing="false" onAction="#showROI" prefHeight="38.0" prefWidth="159.0" text="Calculate Return On Investment">
+            <Button fx:id="paybackPeriod" layoutX="9.0" layoutY="557.0" mnemonicParsing="false" onAction="#showPP" prefHeight="38.0" prefWidth="159.0" text="Calculate Payback Period">
                <font>
                   <Font size="10.0" />
                </font>
Index: SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.skyboxjavafxtester;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Point3D;\r\nimport javafx.print.*;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.SplitPane;\r\nimport javafx.scene.layout.*;\r\nimport javafx.stage.Stage;\r\nimport com.interactivemesh.jfx.importer.tds.TdsModelImporter;\r\nimport com.luckycatlabs.sunrisesunset.*;\r\nimport com.luckycatlabs.sunrisesunset.dto.Location;\r\nimport javafx.geometry.Bounds;\r\nimport javafx.scene.*;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.PhongMaterial;\r\nimport javafx.scene.shape.*;\r\nimport javafx.scene.transform.Rotate;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.math.BigDecimal;\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\n\r\npublic class SkyBoxApplication extends Application {\r\n\r\n    //camera controls and scene settings declarations\r\n    private PerspectiveCamera camera;\r\n    private Group cameraDolly;\r\n    private final double cameraQuantity = 10.0;\r\n\r\n    //Mouse control variable declarations\r\n    private double mousePosX;\r\n    private double mousePosY;\r\n    private double mouseOldX;\r\n    private double mouseOldY;\r\n    private double mouseDeltaX;\r\n    private double mouseDeltaY;\r\n\r\n    //Model Import Declaration\r\n    private static final File house = new File(\"C:\\\\House.3ds\");\r\n    private static final File solarPanel = new File(\"C:\\\\SolarPanel(Export).3ds\");\r\n    private static final File groundSolarPanel = new File(\"C:\\\\GroundSolarPanel.3ds\");\r\n    private static Group solarPanelImport;\r\n    private static Group gPanelOne;\r\n    private static Group gPanelTwo;\r\n    private static Group houseImport;\r\n    static Group solarPanelOnewR;\r\n    static Group solarPanelTwowR;\r\n    static Group solarPanelThreewR;\r\n    static Group solarPanelFourwR;\r\n    static Group gPanelOneBox;\r\n    static Group gPanelTwoBox;\r\n    static Group panelsWHouse;\r\n    static Group sun;\r\n    private Boolean oneSelected = false;\r\n    private Boolean twoSelected = false;\r\n    static PhongMaterial clear = new PhongMaterial(Color.TRANSPARENT);\r\n\r\n    //Location and Dates\r\n    static String sunriseTime;\r\n    static String sunsetTime;\r\n    static Calendar cal;\r\n    static String theDate = \"20220310\";\r\n    static String theLocation;\r\n    static String timeZone = \"GMT-8\";\r\n    static Location location;\r\n    static Double latitude = 47.6588;\r\n    static Double longitude = -117.4260;\r\n    static Date date;\r\n\r\n    //Sun movement variables\r\n    static int timeAS;\r\n    static int timeBS;\r\n    static int sliceofday;\r\n    static int totalMinutes = 720;\r\n    static int sunrise = 0;\r\n    static int sunset = 720;\r\n    static boolean box1closest;\r\n    static boolean box2closest;\r\n    static boolean box3closest;\r\n    static boolean box4closest;\r\n    static boolean gbox1closest;\r\n    static boolean gbox2closest;\r\n    static PhongMaterial col = new PhongMaterial(Color.GREEN);\r\n    static PhongMaterial col1 = new PhongMaterial(Color.RED);\r\n\r\n    private AnchorPane sliderAndDate;\r\n    private AnchorPane uiPane;\r\n    private Label label;\r\n\r\n    static Image skyboxImage;\r\n    private Pane entireFrame;\r\n    private Pane skyboxPane;\r\n\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException, ParseException {\r\n        FXMLLoader fxmlLoader = new FXMLLoader(SkyBoxApplication.class.getResource(\"skybox-viewUI.fxml\"));\r\n        Pane entireFrame = new Pane();\r\n        Group root = new Group(); //TODO: make thie borderpane the root, but load the fxmlL\r\n        Scene scene = new Scene(root, 1024, 768); // Make the whole scene with everything\r\n        entireFrame.getChildren().add(fxmlLoader.load());\r\n\r\n        root.getChildren().addAll(entireFrame);\r\n        scene.setRoot(root);\r\n\r\n        /* Uncomment this section to see the difference that happens\r\n\r\n        // This needs to set up the inside of the skyboxPane?\r\n        scene.setFill(new ImagePattern(skyboxImage)); //THIS causes whole UI to get filled over\r\n        camera = new PerspectiveCamera(true);\r\n        camera.setNearClip(0.1);\r\n        camera.setFarClip(30000.0);\r\n        //sceneRoot.getScene().setCamera(camera);\r\n        root.getScene().setCamera(camera);\r\n        // translations through dolly\r\n        cameraDolly = new Group();\r\n        cameraDolly.setTranslateZ(-1000);\r\n        cameraDolly.setTranslateX(200);\r\n        // rotation transforms\r\n        Group turn = new Group();\r\n        Rotate xRotate = new Rotate(0, 0, 0, 0, Rotate.X_AXIS);\r\n        Rotate yRotate = new Rotate(0, 0, 0, 0, Rotate.Y_AXIS);\r\n        camera.getTransforms().addAll(xRotate);\r\n        turn.getTransforms().addAll(yRotate);\r\n\r\n        //sceneRoot.getChildren().add(cameraDolly);\r\n        root.getChildren().add(cameraDolly);\r\n        cameraDolly.getChildren().add(turn);\r\n        turn.getChildren().add(camera);\r\n\r\n         */\r\n\r\n\r\n        //-------------END of Scene and Camera set up----------------------------//\r\n\r\n\r\n        //----------------Controls Section----------------------------//\r\n/*\r\n        // Use keyboard to control camera position\r\n        //scene.getRoot().setOnKeyPressed(event -> { ???????????????????????????? scene.getRoot() put controls in the anchorPane?\r\n        scene.setOnKeyPressed(event -> {\r\n            double change = cameraQuantity;\r\n            KeyCode keycode = event.getCode();\r\n\r\n            Rotate r = new Rotate(-1, Rotate.Y_AXIS); //rotate house right\r\n            Rotate l = new Rotate(1, Rotate.Y_AXIS); //rotate house left\r\n            Rotate n = new Rotate(45, Rotate.Y_AXIS); //rotate Ground Panel One\r\n            Rotate n1 = new Rotate(45, Rotate.Y_AXIS); //rotate Ground Panel One\r\n\r\n            setCenters(r, houseImport); //Get centers to rotate from center\r\n            setCenters(l, houseImport);\r\n            setCenters(n, gPanelOne);\r\n            setCenters(n1, gPanelTwo);\r\n\r\n            Transform t = new Rotate();\r\n\r\n            Point3D delta = null;\r\n\r\n            if (keycode == KeyCode.COMMA) {\r\n                delta = new Point3D(0, 0, change);\r\n            }\r\n            if (keycode == KeyCode.PERIOD) {\r\n                delta = new Point3D(0, 0, -change);\r\n            }\r\n            if (keycode == KeyCode.A) {\r\n                delta = new Point3D(-change, 0, 0);\r\n            }\r\n            if (keycode == KeyCode.D) {\r\n                delta = new Point3D(change, 0, 0);\r\n            }\r\n            if (keycode == KeyCode.W) {\r\n                delta = new Point3D(0, -change, 0);\r\n            }\r\n            if (keycode == KeyCode.S) {\r\n                delta = new Point3D(0, change, 0);\r\n            }\r\n            if (keycode == KeyCode.M) { //Rotate house and all solar panels Right\r\n                t = t.createConcatenation(l);\r\n                panelsWHouse.getTransforms().addAll(t);\r\n            }\r\n            if (keycode == KeyCode.N) { //Rotate house and all solar panels Left\r\n                t = t.createConcatenation(r);\r\n                panelsWHouse.getTransforms().addAll(t);\r\n            }\r\n            if(keycode == KeyCode.DIGIT0){ //Clears selected panels\r\n                clearSelected();\r\n            }\r\n            if(keycode == KeyCode.DIGIT1){ // Selects ground panel number 1\r\n                gPanelOneSelected();\r\n            }\r\n            if(keycode == KeyCode.DIGIT2) //selects ground panel number 2\r\n            {\r\n                gPanelTwoSelected();\r\n            }\r\n            if (keycode == KeyCode.RIGHT) { //Move selected ground panel to the right in the screen\r\n                if(oneSelected == true) {\r\n                    gPanelOneBox.setTranslateX(gPanelOneBox.getTranslateX() + 1);\r\n                }\r\n                else if(twoSelected == true){\r\n                    gPanelTwoBox.setTranslateX(gPanelTwoBox.getTranslateX() + 1);\r\n                }\r\n            }\r\n\r\n            if (keycode == KeyCode.LEFT) { //Move selected ground panel to the left in the screen\r\n                if(oneSelected == true) {\r\n                    gPanelOneBox.setTranslateX(gPanelOneBox.getTranslateX() - 1);\r\n                }\r\n                else if(twoSelected == true){\r\n                    gPanelTwoBox.setTranslateX(gPanelTwoBox.getTranslateX() - 1);\r\n                }\r\n            }\r\n\r\n            if (keycode == KeyCode.UP) { // Move selected ground panel back\r\n                if(oneSelected == true) {\r\n                    gPanelOneBox.setTranslateZ(gPanelOneBox.getTranslateZ() + 1);\r\n                }\r\n                else if(twoSelected == true) {\r\n                    gPanelTwoBox.setTranslateZ(gPanelTwoBox.getTranslateZ() + 1);\r\n                }\r\n            }\r\n\r\n            if (keycode == KeyCode.DOWN) { // Move selected ground panel forward\r\n                if(oneSelected == true) {\r\n                    gPanelOneBox.setTranslateZ(gPanelOneBox.getTranslateZ() - 1);\r\n                }\r\n                else if(twoSelected == true) {\r\n                    gPanelTwoBox.setTranslateZ(gPanelTwoBox.getTranslateZ() - 1);\r\n                }\r\n            }\r\n\r\n            if (keycode == KeyCode.SPACE) {  //Rotate selected ground solar panel\r\n                if(oneSelected == true) {\r\n                    t = t.createConcatenation(n);\r\n                    gPanelOneBox.getTransforms().addAll(t);\r\n                }\r\n                else if(twoSelected == true) {\r\n                    t = t.createConcatenation(n1);\r\n                    gPanelTwoBox.getTransforms().addAll(t);\r\n                }\r\n            }\r\n\r\n            if (delta != null) {\r\n                Point3D delta2 = camera.localToParent(delta);\r\n                cameraDolly.setTranslateX(cameraDolly.getTranslateX() + delta2.getX());\r\n                cameraDolly.setTranslateY(cameraDolly.getTranslateY() + delta2.getY());\r\n                cameraDolly.setTranslateZ(cameraDolly.getTranslateZ() + delta2.getZ());\r\n\r\n            }\r\n        });\r\n\r\n        // Use mouse to control camera rotation\r\n        scene.setOnMousePressed(me -> {\r\n            mousePosX = me.getSceneX();\r\n            mousePosY = me.getSceneY();\r\n        });\r\n\r\n        scene.setOnMouseDragged(me -> {\r\n            mouseOldX = mousePosX;\r\n            mouseOldY = mousePosY;\r\n            mousePosX = me.getSceneX();\r\n            mousePosY = me.getSceneY();\r\n            mouseDeltaX = (mousePosX - mouseOldX);\r\n            mouseDeltaY = (mousePosY - mouseOldY);\r\n\r\n            yRotate.setAngle(((yRotate.getAngle() - mouseDeltaX * 0.2) % 360 + 540) % 360 - 180); // +\r\n            xRotate.setAngle(((xRotate.getAngle() + mouseDeltaY * 0.2) % 360 + 540) % 360 - 180); // -\r\n        });\r\n\r\n\r\n */\r\n//        Node printPane = (Node) controller.setSkyboxPane();\r\n//        Printer printer = Printer.getDefaultPrinter();\r\n//        PageLayout pageLayout = printer.createPageLayout(Paper.A4,\r\n//                PageOrientation.PORTRAIT, Printer.MarginType.HARDWARE_MINIMUM);\r\n//        PrinterJob job = PrinterJob.createPrinterJob();\r\n//\r\n//        if (job != null && job.showPrintDialog(printPane.getScene().getWindow())) {\r\n//            boolean success = job.printPage(pageLayout, printPane);\r\n//            if (success) {\r\n//                job.endJob();\r\n//            }\r\n//        }\r\n\r\n        stage.setTitle(\"Solar Optimization Simulator!\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    static void constructWorld(Group root) {\r\n        // AmbientLight light = new AmbientLight();\r\n        AmbientLight light = new AmbientLight(Color.rgb(160, 160, 160));\r\n\r\n        PointLight pl = new PointLight();\r\n        pl.setTranslateX(100);\r\n        pl.setTranslateY(-100);\r\n        pl.setTranslateZ(-100);\r\n        root.getChildren().add(pl);\r\n\r\n        final PhongMaterial greenMaterial = new PhongMaterial();\r\n        greenMaterial.setDiffuseColor(Color.FORESTGREEN);\r\n        greenMaterial.setSpecularColor(Color.LIMEGREEN);\r\n        Box xAxis = new Box(500, 10, 10);\r\n        xAxis.setMaterial(greenMaterial);\r\n        Box yAxis = new Box(10, 200, 10);\r\n        yAxis.setMaterial(greenMaterial);\r\n        Box zAxis = new Box(10, 10, 200);\r\n        zAxis.setMaterial(greenMaterial);\r\n\r\n        final PhongMaterial redMaterial = new PhongMaterial();\r\n        redMaterial.setDiffuseColor(Color.RED);\r\n        redMaterial.setSpecularColor(Color.TOMATO);\r\n        final Sphere sphere = new Sphere(30);\r\n        sphere.setMaterial(redMaterial);\r\n\r\n        sphere.setTranslateX(150);\r\n\r\n        final PhongMaterial yellowMaterial = new PhongMaterial();\r\n        yellowMaterial.setDiffuseColor(Color.rgb(200, 200, 0));\r\n        // yellowMaterial.setDiffuseColor(Color.YELLOW);\r\n        // yellowMaterial.setSpecularColor(Color.WHITE);\r\n        final Sphere sphere2 = new Sphere(30);\r\n        sphere2.setMaterial(yellowMaterial);\r\n        // sphere2.setDrawMode(DrawMode.LINE);\r\n\r\n        sphere2.setTranslateX(110);\r\n\r\n        // Example from JavaFX for Dummies\r\n        TriangleMesh pyramidMesh = new TriangleMesh();\r\n        // define (a trivial) texture map\r\n        pyramidMesh.getTexCoords().addAll(\r\n                0.5f, 0,\r\n                0, 0.5f,\r\n                1, 0.5f,\r\n                0, 1,\r\n                1, 1\r\n        );\r\n        // define vertices\r\n        float h = 100;                    // Height\r\n        float s = 200;                    // Base hypotenuse\r\n        pyramidMesh.getPoints().addAll(\r\n                0, 0, 0,            // Point 0 - Top\r\n                0, h, -s / 2,         // Point 1 - Front\r\n                -s / 2, h, 0,            // Point 2 - Left\r\n                s / 2, h, 0,            // Point 3 - Right\r\n                0, h, s / 2           // Point 4 - Back\r\n        );\r\n        // define faces\r\n        pyramidMesh.getFaces().addAll(\r\n                0, 0, 2, 1, 1, 2,          // Front left face\r\n                0, 0, 1, 1, 3, 1,          // Front right face\r\n                0, 0, 3, 1, 4, 2,          // Back right face\r\n                0, 0, 4, 1, 2, 2,          // Back left face\r\n                4, 1, 1, 4, 2, 2,          // Bottom left face\r\n                4, 1, 3, 3, 1, 4           // Bottom right face\r\n        );\r\n        pyramidMesh.getFaceSmoothingGroups().addAll(\r\n                1, 2, 3, 4, 5, 5);\r\n        MeshView pyramid = new MeshView(pyramidMesh);\r\n        //pyramid.setDrawMode(DrawMode.LINE);\r\n        final PhongMaterial pyrMaterial = new PhongMaterial();\r\n        //pyrMaterial.setDiffuseMap(new Image(\"pyr_tex.png\")); //TODO missing this image, need to determine the diffuse map\r\n        pyrMaterial.setDiffuseColor(Color.BLUE);\r\n        pyrMaterial.setSpecularColor(Color.WHITE);\r\n        pyramid.setMaterial(pyrMaterial);\r\n        pyramid.setTranslateX(-50);\r\n        pyramid.setTranslateY(-200);\r\n        pyramid.setTranslateZ(0);\r\n        //  root.getChildren().add(pyramid);\r\n\r\n        final PhongMaterial blueMaterial = new PhongMaterial();\r\n        blueMaterial.setDiffuseColor(Color.BLUE);\r\n        blueMaterial.setSpecularColor(Color.WHITE);\r\n        Box box = new Box(40, 60, 80);\r\n        box.setMaterial(blueMaterial);\r\n\r\n        box.setTranslateX(-30);\r\n        box.setTranslateY(-20);\r\n        box.setTranslateZ(-20);\r\n\r\n        root.getChildren().add(light);\r\n\r\n        //Image back = new Image(String.valueOf(SkyBoxApplication.class.getResource(\"skyboxDesert.png\")));\r\n        Image back2 = new Image(\"file:skyboxDesert.png\");\r\n        final PhongMaterial skyMaterial = new PhongMaterial();\r\n        skyMaterial.setDiffuseMap(back2);\r\n        Box skybox = new Box(10000, 10000, 10000);\r\n        skybox.setMaterial(skyMaterial);\r\n        skybox.setCullFace(CullFace.NONE);\r\n        root.getChildren().add(skybox);\r\n\r\n    }\r\n\r\n    private static Group setHouse() {\r\n        TdsModelImporter modelImporter = new TdsModelImporter(); //Model Importer\r\n\r\n        modelImporter.read(house); //Read in the house model\r\n        Node[] oneStoryHouse = modelImporter.getImport(); //create House object with Node[]\r\n        modelImporter.clear(); // clear the importer\r\n\r\n        for (Node node : oneStoryHouse) {\r\n            node.setScaleX(1);\r\n            node.setScaleY(1);\r\n            node.setScaleZ(1);\r\n            node.getTransforms().setAll(new Rotate(25, Rotate.Y_AXIS), new Rotate(-90, Rotate.X_AXIS));\r\n            node.setTranslateX(0); // These place the house towards the ground and to the right of the view\r\n            node.setTranslateY(200); // ^^^^^^^^^^^^^^^\r\n        }\r\n        houseImport = new Group(oneStoryHouse); //create new group with the house\r\n        return houseImport;\r\n    }\r\n\r\n    private static Group setAllSolarPanels(File solar, int pX, int pY, int pZ, int AY, int AX, int AZ) //----Model Helper Method----//\r\n    {\r\n        TdsModelImporter modelImporter = new TdsModelImporter(); //Model Importer\r\n        modelImporter.read(solar);\r\n        Node[] model = modelImporter.getImport();\r\n\r\n        for (Node node : model) {\r\n            node.setScaleX(1);\r\n            node.setScaleY(1);\r\n            node.setScaleZ(1);                                                         //Slope of roof\r\n            node.getTransforms().setAll(new Rotate(AY, Rotate.Y_AXIS), new Rotate(AX, Rotate.X_AXIS), new Rotate(AZ, Rotate.Z_AXIS));\r\n            node.setTranslateX(pX); // Move right or left\r\n            node.setTranslateY(pY); // Move Up or down ... Height of roof\r\n            node.setTranslateZ(pZ); // Move forward or backward\r\n        }\r\n        solarPanelImport = new Group(model);\r\n        return solarPanelImport;\r\n    }\r\n\r\n    private static Box createsolar(Group group1, double height, double depth, double width, double rax, double raz, double ray) {\r\n        Box box = new Box();\r\n        Bounds cord = group1.getBoundsInLocal();\r\n        box.getTransforms().setAll(new Rotate(ray, Rotate.Y_AXIS), new Rotate(rax, Rotate.X_AXIS), new Rotate(raz, Rotate.Z_AXIS));\r\n        box.setTranslateX(cord.getCenterX());\r\n        box.setTranslateZ(cord.getCenterZ());\r\n        box.setTranslateY(cord.getCenterY());\r\n        box.setHeight(height);\r\n        box.setDepth(depth);\r\n        box.setWidth(width);\r\n        box.setMaterial(clear);\r\n        return box;\r\n    }\r\n\r\n    private void setCenters(Rotate r, Group beingRotated) {\r\n        r.setPivotX(beingRotated.getBoundsInLocal().getCenterX());\r\n        r.setPivotY(beingRotated.getBoundsInLocal().getCenterY());\r\n        r.setPivotZ(beingRotated.getBoundsInLocal().getCenterZ());\r\n    }\r\n\r\n    private void gPanelOneSelected() {\r\n        oneSelected = true;\r\n        twoSelected = false;\r\n    }\r\n\r\n    private void gPanelTwoSelected() {\r\n        oneSelected = false;\r\n        twoSelected = true;\r\n    }\r\n\r\n    private void clearSelected() {\r\n        oneSelected = false;\r\n        twoSelected = false;\r\n    }\r\n\r\n    static void startParams() throws ParseException {\r\n        DateFormat formatter = new SimpleDateFormat(\"yyyyMMdd\"); //Formatter\r\n        date = formatter.parse(theDate); //Parse string to create Date object\r\n        cal = Calendar.getInstance(); //Calendar object created\r\n        cal.setTime(date); //Calender object given corresponding date\r\n\r\n        location = new Location(latitude.doubleValue(), longitude.doubleValue()); // Will be entered in coordinates\r\n        SunriseSunsetCalculator calculator = new SunriseSunsetCalculator(location, timeZone); // Creates calculator for sun times\r\n\r\n        sunriseTime = calculator.getOfficialSunriseForDate(cal); // Gets sunrise based on date and calculator created\r\n        sunsetTime = calculator.getOfficialSunsetForDate(cal); // Gets sunset based on date and calculator created\r\n    }\r\n\r\n    static Group models() {\r\n\r\n        int rightSideAngles[] = {-68, -68, 0};\r\n\r\n        int panelOneCoordinates[] = {300, -74, 190};\r\n        int panelTwoCoordinates[] = {395, -74, 400};\r\n\r\n        int leftSideAngles[] = {-68, -113, 0};\r\n        int panelThreeCoordinates[] = {190, -43, 250};\r\n        int panelFourCoordinates[] = {275, -43, 440};\r\n\r\n        int gPanelOneCoordinates[] = {0, 180, 190};\r\n        int gPanelTwoCoordinates[] = {460, 180, 100};\r\n        int gPanelLeftAngles[] = {115, -90, 0};\r\n        int gPanelRightAngles[] = {-65, -90, 0};\r\n//                                105\r\n        //Sets house and panels into scene\r\n        Group houseImport = setHouse();\r\n        Group solarPanelOne = setAllSolarPanels(solarPanel, panelOneCoordinates[0], panelOneCoordinates[1], panelOneCoordinates[2], rightSideAngles[0], rightSideAngles[1], rightSideAngles[2]); //4 roof panels\r\n        Group solarPanelTwo = setAllSolarPanels(solarPanel, panelTwoCoordinates[0], panelTwoCoordinates[1], panelTwoCoordinates[2], rightSideAngles[0], rightSideAngles[1], rightSideAngles[2]);\r\n        Group solarPanelThree = setAllSolarPanels(solarPanel, panelThreeCoordinates[0], panelThreeCoordinates[1], panelThreeCoordinates[2], leftSideAngles[0], leftSideAngles[1], leftSideAngles[2]);\r\n        Group solarPanelFour = setAllSolarPanels(solarPanel, panelFourCoordinates[0], panelFourCoordinates[1], panelFourCoordinates[2], leftSideAngles[0], leftSideAngles[1], leftSideAngles[2]);\r\n        gPanelOne = setAllSolarPanels(groundSolarPanel, gPanelOneCoordinates[0], gPanelOneCoordinates[1], gPanelOneCoordinates[2], gPanelLeftAngles[0], gPanelLeftAngles[1], gPanelLeftAngles[2]); //2 ground panels\r\n        gPanelTwo = setAllSolarPanels(groundSolarPanel, gPanelTwoCoordinates[0], gPanelTwoCoordinates[1], gPanelTwoCoordinates[2], gPanelRightAngles[0], gPanelRightAngles[1], gPanelRightAngles[2]);\r\n\r\n        //sets boxes with panels\r\n        Box boxers = createsolar(solarPanelOne, 39, 3.64, 65, rightSideAngles[1], rightSideAngles[2], rightSideAngles[0]);\r\n        Box boxers2 = createsolar(solarPanelTwo, 39, 3.64, 65, rightSideAngles[1], rightSideAngles[2], rightSideAngles[0]);\r\n        Box boxers3 = createsolar(solarPanelThree, 39, 3.64, 65, -rightSideAngles[1], -rightSideAngles[2], rightSideAngles[0]);\r\n        Box boxers4 = createsolar(solarPanelFour, 39, 3.64, 65, -rightSideAngles[1], -rightSideAngles[2], rightSideAngles[0]);\r\n        Box boxers5 = createsolar(gPanelOne, 39, 3.64, 130, 55, 0, -65);\r\n        Box boxers6 = createsolar(gPanelTwo, 39, 3.64, 130, -55, 0, -65);\r\n\r\n        //Grouping together solar panel w/ respective box\r\n        solarPanelOnewR = new Group(solarPanelOne, boxers);\r\n        solarPanelTwowR = new Group(solarPanelTwo, boxers2);\r\n        solarPanelThreewR = new Group(solarPanelThree, boxers3);\r\n        solarPanelFourwR = new Group(solarPanelFour, boxers4);\r\n        gPanelOneBox = new Group(gPanelOne, boxers5);\r\n        gPanelTwoBox = new Group(gPanelTwo, boxers6);\r\n\r\n        panelsWHouse = new Group(houseImport, solarPanelOnewR, solarPanelTwowR, solarPanelThreewR, solarPanelFourwR, gPanelOneBox, gPanelTwoBox);\r\n        //panelsWHouse.setTranslateY(-200); // puts house at 0,0,0... If you comment this it shows models on screen\r\n        return panelsWHouse;\r\n    }\r\n\r\n    static Group sunCreation() {\r\n        Sphere sphere = new Sphere(80.0f);\r\n        PhongMaterial material = new PhongMaterial();\r\n        material.setDiffuseColor(Color.YELLOWGREEN);\r\n        sphere.setMaterial(material);\r\n\r\n        // create a point light\r\n        PointLight pointlight = new PointLight();\r\n\r\n        // create a Group\r\n        sun = new Group(sphere, pointlight);\r\n        // translate the sphere to a position\r\n\r\n        sphere.setTranslateX(100);\r\n        sphere.setTranslateY(-200);\r\n        pointlight.setTranslateZ(-1000);\r\n        pointlight.setTranslateX(+1000);\r\n        pointlight.setTranslateY(+10);\r\n        pointlight.setColor(Color.GREENYELLOW);\r\n\r\n        return sun;\r\n    }\r\n\r\n    static void sunTrajectory() {\r\n        Sphere sphere = new Sphere(80.0f);\r\n        Sphere sphere1 = new Sphere(80.0f);\r\n        Sphere sphere3 = new Sphere(80.0f);\r\n        Sphere sphere4 = new Sphere(80.0f);\r\n\r\n        PhongMaterial material = new PhongMaterial();\r\n        material.setDiffuseColor(Color.YELLOWGREEN);\r\n        sphere.setMaterial(material);\r\n        //sphere1.setMaterial(material);\r\n\r\n        // create a point light\r\n        PointLight pointlight = new PointLight();\r\n        Group sun = new Group(sphere, pointlight);\r\n        Group sun1 = new Group(sphere1, pointlight);\r\n        Group sun3 = new Group(sphere3, pointlight);\r\n        Group sun4 = new Group(sphere4, pointlight);\r\n\r\n        pointlight.setColor(Color.YELLOWGREEN);\r\n\r\n        Point3D point1 = new Point3D(gPanelOneBox.getTranslateX(), gPanelOneBox.getTranslateY(), gPanelOneBox.getTranslateZ());\r\n        Point3D point2 = new Point3D(sun.getTranslateX(), sun.getTranslateY(), sun.getTranslateZ());\r\n\r\n        Double distance = Math.sqrt(Math.pow(point1.getX() - point2.getX(), 2) + Math.pow(point1.getY() - point2.getY(), 2) + Math.pow(point1.getZ() - point2.getZ(), 2));\r\n        System.out.println(distance);\r\n\r\n        //code for 7:59 current time\r\n        //199 minutes after sunrise\r\n        //at 6 am or 0;\r\n        int totaltime = 720;\r\n        int slice = totaltime / 6;\r\n        int currenttime = 720;\r\n        int sliceofday = 0;\r\n\r\n\r\n        if (slice >= currenttime) {\r\n            double angle = 30;\r\n            angle = Math.toRadians(angle);\r\n            double x33 = Math.cos(angle);\r\n            double y33 = Math.sin(angle);\r\n\r\n            sun.setTranslateX(x33 * 500);\r\n            sun.setTranslateY(-y33 * 500);\r\n            //sceneRoot.getChildren().add(sun);\r\n            sun.setTranslateZ(0);\r\n            //sceneRoot.getChildren().add(sun);\r\n\r\n        }\r\n\r\n\r\n        if (((2 * slice) >= currenttime) && (slice < currenttime)) {\r\n            double angle1 = 60;\r\n            angle1 = Math.toRadians(angle1);\r\n            double x66 = Math.cos(angle1);\r\n            double y66 = Math.sin(angle1);\r\n            sun.setTranslateX(x66 * 500);\r\n            sun.setTranslateY(-y66 * 500);\r\n            sun.setTranslateZ(0);\r\n            //sceneRoot.getChildren().add(sun1);\r\n\r\n            //sun1.setTranslateZ(0);\r\n        }\r\n        if (((4 * slice) >= currenttime) && (3 * slice < currenttime)) {\r\n            double angle2 = 120;\r\n            angle2 = Math.toRadians(angle2);\r\n            double x12 = Math.cos(angle2);\r\n            double y12 = Math.sin(angle2);\r\n            sun.setTranslateX(x12 * 500);\r\n            sun.setTranslateY(-y12 * 500);\r\n            sun.setTranslateZ(0);\r\n            //sceneRoot.getChildren().add(sun3);\r\n        }\r\n        if (((3 * slice) >= currenttime) && (2 * slice < currenttime)) {\r\n            double angle3 = 90;\r\n            angle3 = Math.toRadians(angle3);\r\n            double x90 = Math.cos(angle3);\r\n            double y90 = Math.sin(angle3);\r\n            sun.setTranslateX(x90 * 500);\r\n            sun.setTranslateZ(0);\r\n            sun.setTranslateY(-y90 * 500);\r\n            //sceneRoot.getChildren().add(sun4);\r\n        }\r\n        if (((5 * slice) >= currenttime) && (4 * slice < currenttime)) {\r\n            double angle3 = 150;\r\n            angle3 = Math.toRadians(angle3);\r\n            double x150 = Math.cos(angle3);\r\n            double y150 = Math.sin(angle3);\r\n            sun.setTranslateX(x150 * 500);\r\n            sun.setTranslateZ(0);\r\n            sun.setTranslateY(-y150 * 500);\r\n            //sceneRoot.getChildren().add(sun4);\r\n        }\r\n        if (((6 * slice) >= currenttime) && (5 * slice < currenttime)) {\r\n            double angle3 = 180;\r\n            angle3 = Math.toRadians(angle3);\r\n            double x180 = Math.cos(angle3);\r\n            double y180 = Math.sin(angle3);\r\n            sun.setTranslateX(x180 * 500);\r\n            sun.setTranslateZ(0);\r\n            sun.setTranslateY(-y180 * 500);\r\n            //sceneRoot.getChildren().add(sun4);\r\n        }\r\n        //sceneRoot.getChildren().add(sun);\r\n\r\n    }\r\n\r\n    //helper methods for most optimal\r\n    public static double distancecalc(Box box, Group sun) {\r\n        Point3D point1 = new Point3D(box.getTranslateX(), box.getTranslateY(), box.getTranslateZ());\r\n        Point3D point2 = new Point3D(sun.getTranslateX(), sun.getTranslateY(), sun.getTranslateZ());\r\n        Double distance = Math.sqrt(Math.pow(point1.getX() - point2.getX(), 2) + Math.pow(point1.getY() - point2.getY(), 2) + Math.pow(point1.getZ() - point2.getZ(), 2));\r\n        return distance;\r\n    }\r\n\r\n    public static void colorSetOpt(Group sunOb) {\r\n        Double b1d = distancecalc((Box) solarPanelOnewR.getChildren().get(1), sunOb);\r\n        Double b2d = distancecalc((Box) solarPanelTwowR.getChildren().get(1), sunOb);\r\n        Double b3d = distancecalc((Box) solarPanelThreewR.getChildren().get(1), sunOb);\r\n        Double b4d = distancecalc((Box) solarPanelFourwR.getChildren().get(1), sunOb);\r\n        box1closest = true;\r\n        box2closest = false;\r\n        box3closest = false;\r\n        box4closest = false;\r\n\r\n        if ((b2d < b1d) && (b2d < b3d) && (b2d < b4d)) {\r\n            box1closest = false;\r\n            box2closest = true;\r\n            box3closest = false;\r\n            box4closest = false;\r\n        }\r\n        if ((b3d < b2d) && (b3d < b1d) && (b3d < b4d)) {\r\n            box1closest = false;\r\n            box2closest = false;\r\n            box3closest = true;\r\n            box4closest = false;\r\n        }\r\n        if ((b4d < b1d) && (b4d < b3d) && (b4d < b2d)) {\r\n            box1closest = false;\r\n            box2closest = false;\r\n            box3closest = false;\r\n            box4closest = true;\r\n        }\r\n        if (box1closest = true) {\r\n            ((Box) solarPanelOnewR.getChildren().get(1)).setMaterial(col);\r\n            ((Box) solarPanelTwowR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelThreewR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelFourwR.getChildren().get(1)).setMaterial(col1);\r\n        }\r\n        if (box2closest = true) {\r\n            ((Box) solarPanelOnewR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelTwowR.getChildren().get(1)).setMaterial(col);\r\n            ((Box) solarPanelThreewR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelFourwR.getChildren().get(1)).setMaterial(col1);\r\n\r\n        }\r\n        if (box3closest = true) {\r\n            ((Box) solarPanelOnewR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelTwowR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelThreewR.getChildren().get(1)).setMaterial(col);\r\n            ((Box) solarPanelFourwR.getChildren().get(1)).setMaterial(col1);\r\n        }\r\n        if (box4closest = true) {\r\n            ((Box) solarPanelOnewR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelTwowR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelThreewR.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) solarPanelFourwR.getChildren().get(1)).setMaterial(col);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    public static void gColorSetOpt(Group sunOb){\r\n        Double b1d = distancecalc((Box) gPanelOneBox.getChildren().get(1), sunOb);\r\n        Double b2d = distancecalc((Box) gPanelTwoBox.getChildren().get(1), sunOb);\r\n        gbox1closest = true;\r\n        gbox2closest=false;\r\n\r\n        if((b2d < b1d)){\r\n            box1closest = false;\r\n            box2closest = true;\r\n        }\r\n        if(gbox1closest = true){\r\n            ((Box) gPanelOneBox.getChildren().get(1)).setMaterial(col);\r\n            ((Box) gPanelTwoBox.getChildren().get(1)).setMaterial(col1);\r\n        }\r\n        if(gbox2closest = true){\r\n            ((Box) gPanelOneBox.getChildren().get(1)).setMaterial(col1);\r\n            ((Box) gPanelTwoBox.getChildren().get(1)).setMaterial(col);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java b/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java
--- a/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java	(revision 12d37e330515c6c4f5fc5ef7d22b57cfefa6dbb8)
+++ b/SkyBoxJavaFX-Tester/src/main/java/com/example/skyboxjavafxtester/SkyBoxApplication.java	(date 1647230598345)
@@ -7,7 +7,9 @@
 import javafx.scene.Scene;
 import javafx.scene.control.Label;
 import javafx.scene.control.SplitPane;
+import javafx.scene.input.KeyCode;
 import javafx.scene.layout.*;
+import javafx.scene.transform.Transform;
 import javafx.stage.Stage;
 import com.interactivemesh.jfx.importer.tds.TdsModelImporter;
 import com.luckycatlabs.sunrisesunset.*;
@@ -147,7 +149,7 @@
 
 
         //----------------Controls Section----------------------------//
-/*
+
         // Use keyboard to control camera position
         //scene.getRoot().setOnKeyPressed(event -> { ???????????????????????????? scene.getRoot() put controls in the anchorPane?
         scene.setOnKeyPressed(event -> {
@@ -274,12 +276,12 @@
             mouseDeltaX = (mousePosX - mouseOldX);
             mouseDeltaY = (mousePosY - mouseOldY);
 
-            yRotate.setAngle(((yRotate.getAngle() - mouseDeltaX * 0.2) % 360 + 540) % 360 - 180); // +
-            xRotate.setAngle(((xRotate.getAngle() + mouseDeltaY * 0.2) % 360 + 540) % 360 - 180); // -
+            //yRotate.setAngle(((yRotate.getAngle() - mouseDeltaX * 0.2) % 360 + 540) % 360 - 180); // +
+           // xRotate.setAngle(((xRotate.getAngle() + mouseDeltaY * 0.2) % 360 + 540) % 360 - 180); // -
         });
 
 
- */
+
 //        Node printPane = (Node) controller.setSkyboxPane();
 //        Printer printer = Printer.getDefaultPrinter();
 //        PageLayout pageLayout = printer.createPageLayout(Paper.A4,
